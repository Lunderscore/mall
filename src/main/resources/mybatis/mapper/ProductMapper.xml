<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxx.mall.mapper.ProductMapper">
    <resultMap id="BaseResultMap" type="com.xxx.mall.bean.po.Product">
        <id column="product_id" jdbcType="INTEGER" property="productId"/>
        <result column="product_title" jdbcType="VARCHAR" property="productTitle"/>
        <result column="product_info" jdbcType="VARCHAR" property="productInfo"/>
        <result column="product_price" jdbcType="DECIMAL" property="productPrice"/>
        <result column="product_stock" jdbcType="INTEGER" property="productStock"/>
        <result column="product_img1" jdbcType="VARCHAR" property="productImg1"/>
        <result column="product_img2" jdbcType="VARCHAR" property="productImg2"/>
        <result column="product_img3" jdbcType="VARCHAR" property="productImg3"/>
        <result column="product_status" jdbcType="INTEGER" property="productStatus"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    product_id, product_title, product_info, product_price, product_stock, product_img1, 
    product_img2, product_img3, product_status
  </sql>
    <select id="selectByExample" parameterType="com.xxx.mall.bean.po.ProductExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from product
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from product
        where product_id = #{productId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product
    where product_id = #{productId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.xxx.mall.bean.po.ProductExample">
        delete from product
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.xxx.mall.bean.po.Product">
    insert into product (product_id, product_title, product_info, 
      product_price, product_stock, product_img1, 
      product_img2, product_img3, product_status
      )
    values (#{productId,jdbcType=INTEGER}, #{productTitle,jdbcType=VARCHAR}, #{productInfo,jdbcType=VARCHAR}, 
      #{productPrice,jdbcType=DECIMAL}, #{productStock,jdbcType=INTEGER}, #{productImg1,jdbcType=VARCHAR}, 
      #{productImg2,jdbcType=VARCHAR}, #{productImg3,jdbcType=VARCHAR}, #{productStatus,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.xxx.mall.bean.po.Product">
        insert into product
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="productId != null">
                product_id,
            </if>
            <if test="productTitle != null">
                product_title,
            </if>
            <if test="productInfo != null">
                product_info,
            </if>
            <if test="productPrice != null">
                product_price,
            </if>
            <if test="productStock != null">
                product_stock,
            </if>
            <if test="productImg1 != null">
                product_img1,
            </if>
            <if test="productImg2 != null">
                product_img2,
            </if>
            <if test="productImg3 != null">
                product_img3,
            </if>
            <if test="productStatus != null">
                product_status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="productId != null">
                #{productId,jdbcType=INTEGER},
            </if>
            <if test="productTitle != null">
                #{productTitle,jdbcType=VARCHAR},
            </if>
            <if test="productInfo != null">
                #{productInfo,jdbcType=VARCHAR},
            </if>
            <if test="productPrice != null">
                #{productPrice,jdbcType=DECIMAL},
            </if>
            <if test="productStock != null">
                #{productStock,jdbcType=INTEGER},
            </if>
            <if test="productImg1 != null">
                #{productImg1,jdbcType=VARCHAR},
            </if>
            <if test="productImg2 != null">
                #{productImg2,jdbcType=VARCHAR},
            </if>
            <if test="productImg3 != null">
                #{productImg3,jdbcType=VARCHAR},
            </if>
            <if test="productStatus != null">
                #{productStatus,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.xxx.mall.bean.po.ProductExample" resultType="java.lang.Long">
        select count(*) from product
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update product
        <set>
            <if test="record.productId != null">
                product_id = #{record.productId,jdbcType=INTEGER},
            </if>
            <if test="record.productTitle != null">
                product_title = #{record.productTitle,jdbcType=VARCHAR},
            </if>
            <if test="record.productInfo != null">
                product_info = #{record.productInfo,jdbcType=VARCHAR},
            </if>
            <if test="record.productPrice != null">
                product_price = #{record.productPrice,jdbcType=DECIMAL},
            </if>
            <if test="record.productStock != null">
                product_stock = #{record.productStock,jdbcType=INTEGER},
            </if>
            <if test="record.productImg1 != null">
                product_img1 = #{record.productImg1,jdbcType=VARCHAR},
            </if>
            <if test="record.productImg2 != null">
                product_img2 = #{record.productImg2,jdbcType=VARCHAR},
            </if>
            <if test="record.productImg3 != null">
                product_img3 = #{record.productImg3,jdbcType=VARCHAR},
            </if>
            <if test="record.productStatus != null">
                product_status = #{record.productStatus,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update product
        set product_id = #{record.productId,jdbcType=INTEGER},
        product_title = #{record.productTitle,jdbcType=VARCHAR},
        product_info = #{record.productInfo,jdbcType=VARCHAR},
        product_price = #{record.productPrice,jdbcType=DECIMAL},
        product_stock = #{record.productStock,jdbcType=INTEGER},
        product_img1 = #{record.productImg1,jdbcType=VARCHAR},
        product_img2 = #{record.productImg2,jdbcType=VARCHAR},
        product_img3 = #{record.productImg3,jdbcType=VARCHAR},
        product_status = #{record.productStatus,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.xxx.mall.bean.po.Product">
        update product
        <set>
            <if test="productTitle != null">
                product_title = #{productTitle,jdbcType=VARCHAR},
            </if>
            <if test="productInfo != null">
                product_info = #{productInfo,jdbcType=VARCHAR},
            </if>
            <if test="productPrice != null">
                product_price = #{productPrice,jdbcType=DECIMAL},
            </if>
            <if test="productStock != null">
                product_stock = #{productStock,jdbcType=INTEGER},
            </if>
            <if test="productImg1 != null">
                product_img1 = #{productImg1,jdbcType=VARCHAR},
            </if>
            <if test="productImg2 != null">
                product_img2 = #{productImg2,jdbcType=VARCHAR},
            </if>
            <if test="productImg3 != null">
                product_img3 = #{productImg3,jdbcType=VARCHAR},
            </if>
            <if test="productStatus != null">
                product_status = #{productStatus,jdbcType=INTEGER},
            </if>
        </set>
        where product_id = #{productId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xxx.mall.bean.po.Product">
    update product
    set product_title = #{productTitle,jdbcType=VARCHAR},
      product_info = #{productInfo,jdbcType=VARCHAR},
      product_price = #{productPrice,jdbcType=DECIMAL},
      product_stock = #{productStock,jdbcType=INTEGER},
      product_img1 = #{productImg1,jdbcType=VARCHAR},
      product_img2 = #{productImg2,jdbcType=VARCHAR},
      product_img3 = #{productImg3,jdbcType=VARCHAR},
      product_status = #{productStatus,jdbcType=INTEGER}
    where product_id = #{productId,jdbcType=INTEGER}
  </update>
</mapper>